// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.28.3
// source: proto/series.proto

package series

import (
	_ "github.com/google/gnostic/openapiv3"
	api "github.com/liluoliluoli/gnboot/api"
	actor "github.com/liluoliluoli/gnboot/api/actor"
	episode "github.com/liluoliluoli/gnboot/api/episode"
	genre "github.com/liluoliluoli/gnboot/api/genre"
	keyword "github.com/liluoliluoli/gnboot/api/keyword"
	season "github.com/liluoliluoli/gnboot/api/season"
	studio "github.com/liluoliluoli/gnboot/api/studio"
	_ "github.com/liluoliluoli/gnboot/api/subtitle"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VoteAverage    float32                `protobuf:"fixed32,2,opt,name=voteAverage,proto3" json:"voteAverage,omitempty"`
	VoteCount      int32                  `protobuf:"varint,3,opt,name=voteCount,proto3" json:"voteCount,omitempty"`
	Country        string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Trailer        string                 `protobuf:"bytes,5,opt,name=trailer,proto3" json:"trailer,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	SkipIntro      int32                  `protobuf:"varint,7,opt,name=skipIntro,proto3" json:"skipIntro,omitempty"`
	SkipEnding     int32                  `protobuf:"varint,8,opt,name=skipEnding,proto3" json:"skipEnding,omitempty"`
	Genres         []*genre.GenreResp     `protobuf:"bytes,9,rep,name=genres,proto3" json:"genres,omitempty"`
	Studios        []*studio.StudioResp   `protobuf:"bytes,10,rep,name=studios,proto3" json:"studios,omitempty"`
	Keywords       []*keyword.KeywordResp `protobuf:"bytes,11,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Seasons        []*season.SeasonResp   `protobuf:"bytes,12,rep,name=seasons,proto3" json:"seasons,omitempty"`
	NextToPlay     *episode.EpisodeResp   `protobuf:"bytes,13,opt,name=nextToPlay,proto3" json:"nextToPlay,omitempty"`
	OriginalTitle  string                 `protobuf:"bytes,14,opt,name=originalTitle,proto3" json:"originalTitle,omitempty"`
	LastPlayedTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=lastPlayedTime,proto3" json:"lastPlayedTime,omitempty"`
	Filename       string                 `protobuf:"bytes,16,opt,name=filename,proto3" json:"filename,omitempty"`
	Actors         []*actor.ActorResp     `protobuf:"bytes,19,rep,name=actors,proto3" json:"actors,omitempty"`
	Title          string                 `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"`
	Poster         string                 `protobuf:"bytes,21,opt,name=poster,proto3" json:"poster,omitempty"`
	Logo           string                 `protobuf:"bytes,22,opt,name=logo,proto3" json:"logo,omitempty"`
	AirDate        *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=airDate,proto3" json:"airDate,omitempty"`
	Overview       string                 `protobuf:"bytes,24,opt,name=overview,proto3" json:"overview,omitempty"`
	Favorite       bool                   `protobuf:"varint,25,opt,name=favorite,proto3" json:"favorite,omitempty"`
}

func (x *SeriesResp) Reset() {
	*x = SeriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesResp) ProtoMessage() {}

func (x *SeriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesResp.ProtoReflect.Descriptor instead.
func (*SeriesResp) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{0}
}

func (x *SeriesResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeriesResp) GetVoteAverage() float32 {
	if x != nil {
		return x.VoteAverage
	}
	return 0
}

func (x *SeriesResp) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

func (x *SeriesResp) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SeriesResp) GetTrailer() string {
	if x != nil {
		return x.Trailer
	}
	return ""
}

func (x *SeriesResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SeriesResp) GetSkipIntro() int32 {
	if x != nil {
		return x.SkipIntro
	}
	return 0
}

func (x *SeriesResp) GetSkipEnding() int32 {
	if x != nil {
		return x.SkipEnding
	}
	return 0
}

func (x *SeriesResp) GetGenres() []*genre.GenreResp {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *SeriesResp) GetStudios() []*studio.StudioResp {
	if x != nil {
		return x.Studios
	}
	return nil
}

func (x *SeriesResp) GetKeywords() []*keyword.KeywordResp {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *SeriesResp) GetSeasons() []*season.SeasonResp {
	if x != nil {
		return x.Seasons
	}
	return nil
}

func (x *SeriesResp) GetNextToPlay() *episode.EpisodeResp {
	if x != nil {
		return x.NextToPlay
	}
	return nil
}

func (x *SeriesResp) GetOriginalTitle() string {
	if x != nil {
		return x.OriginalTitle
	}
	return ""
}

func (x *SeriesResp) GetLastPlayedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPlayedTime
	}
	return nil
}

func (x *SeriesResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SeriesResp) GetActors() []*actor.ActorResp {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *SeriesResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SeriesResp) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *SeriesResp) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *SeriesResp) GetAirDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AirDate
	}
	return nil
}

func (x *SeriesResp) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *SeriesResp) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

type CreateSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateSeriesRequest) Reset() {
	*x = CreateSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSeriesRequest) ProtoMessage() {}

func (x *CreateSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSeriesRequest.ProtoReflect.Descriptor instead.
func (*CreateSeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSeriesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FindSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *api.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Search *string   `protobuf:"bytes,2,opt,name=search,proto3,oneof" json:"search,omitempty"`
	Sort   *api.Sort `protobuf:"bytes,3,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
}

func (x *FindSeriesRequest) Reset() {
	*x = FindSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSeriesRequest) ProtoMessage() {}

func (x *FindSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSeriesRequest.ProtoReflect.Descriptor instead.
func (*FindSeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{2}
}

func (x *FindSeriesRequest) GetPage() *api.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *FindSeriesRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *FindSeriesRequest) GetSort() *api.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type SearchSeriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *api.Page     `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	List []*SeriesResp `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SearchSeriesResp) Reset() {
	*x = SearchSeriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSeriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSeriesResp) ProtoMessage() {}

func (x *SearchSeriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSeriesResp.ProtoReflect.Descriptor instead.
func (*SearchSeriesResp) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{3}
}

func (x *SearchSeriesResp) GetPage() *api.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SearchSeriesResp) GetList() []*SeriesResp {
	if x != nil {
		return x.List
	}
	return nil
}

type FilterSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *api.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Id   int64     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Type string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FilterSeriesRequest) Reset() {
	*x = FilterSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterSeriesRequest) ProtoMessage() {}

func (x *FilterSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterSeriesRequest.ProtoReflect.Descriptor instead.
func (*FilterSeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{4}
}

func (x *FilterSeriesRequest) GetPage() *api.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *FilterSeriesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilterSeriesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSeriesRequest) Reset() {
	*x = GetSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeriesRequest) ProtoMessage() {}

func (x *GetSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeriesRequest.ProtoReflect.Descriptor instead.
func (*GetSeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{5}
}

func (x *GetSeriesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NextToPlaySeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *api.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *NextToPlaySeriesRequest) Reset() {
	*x = NextToPlaySeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextToPlaySeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextToPlaySeriesRequest) ProtoMessage() {}

func (x *NextToPlaySeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextToPlaySeriesRequest.ProtoReflect.Descriptor instead.
func (*NextToPlaySeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{6}
}

func (x *NextToPlaySeriesRequest) GetPage() *api.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type UpdateSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *UpdateSeriesRequest) Reset() {
	*x = UpdateSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_series_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeriesRequest) ProtoMessage() {}

func (x *UpdateSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_series_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeriesRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_series_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSeriesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSeriesRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

var File_proto_series_proto protoreflect.FileDescriptor

var file_proto_series_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x1a, 0x1b, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x06, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x29, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x74,
	0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e,
	0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6e, 0x62,
	0x6f, 0x6f, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e, 0x62,
	0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6e,
	0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12,
	0x34, 0x0a, 0x07, 0x61, 0x69, 0x72, 0x44, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x61, 0x69,
	0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x22, 0x2e, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x01,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x5c, 0x0a,
	0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x13, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x17,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xf4, 0x04, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x53, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x67,
	0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x69, 0x64, 0x12, 0x5f, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x19, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a,
	0x01, 0x2a, 0x22, 0x11, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x66, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x76, 0x0a,
	0x10, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x2f, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x73, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x01, 0x2a, 0x5a, 0x13, 0x3a, 0x01, 0x2a, 0x32, 0x0e, 0x2f, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x0e, 0x2f, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x67, 0x6e, 0x62,
	0x6f, 0x6f, 0x74, 0x2e, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e,
	0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x9a,
	0x01, 0xba, 0x47, 0x6c, 0x12, 0x34, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x61, 0x64, 0x61, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x64,
	0x6f, 0x63, 0x73, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2a, 0x22, 0x3a, 0x20, 0x0a, 0x1e,
	0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x0e,
	0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x2a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x32, 0x10,
	0x0a, 0x0e, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00,
	0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6c,
	0x75, 0x6f, 0x6c, 0x69, 0x6c, 0x75, 0x6f, 0x6c, 0x69, 0x2f, 0x67, 0x6e, 0x62, 0x6f, 0x6f, 0x74,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_series_proto_rawDescOnce sync.Once
	file_proto_series_proto_rawDescData = file_proto_series_proto_rawDesc
)

func file_proto_series_proto_rawDescGZIP() []byte {
	file_proto_series_proto_rawDescOnce.Do(func() {
		file_proto_series_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_series_proto_rawDescData)
	})
	return file_proto_series_proto_rawDescData
}

var file_proto_series_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_series_proto_goTypes = []interface{}{
	(*SeriesResp)(nil),              // 0: gnboot.SeriesResp
	(*CreateSeriesRequest)(nil),     // 1: gnboot.CreateSeriesRequest
	(*FindSeriesRequest)(nil),       // 2: gnboot.FindSeriesRequest
	(*SearchSeriesResp)(nil),        // 3: gnboot.SearchSeriesResp
	(*FilterSeriesRequest)(nil),     // 4: gnboot.FilterSeriesRequest
	(*GetSeriesRequest)(nil),        // 5: gnboot.GetSeriesRequest
	(*NextToPlaySeriesRequest)(nil), // 6: gnboot.NextToPlaySeriesRequest
	(*UpdateSeriesRequest)(nil),     // 7: gnboot.UpdateSeriesRequest
	(*genre.GenreResp)(nil),         // 8: gnboot.GenreResp
	(*studio.StudioResp)(nil),       // 9: gnboot.StudioResp
	(*keyword.KeywordResp)(nil),     // 10: gnboot.KeywordResp
	(*season.SeasonResp)(nil),       // 11: gnboot.SeasonResp
	(*episode.EpisodeResp)(nil),     // 12: gnboot.EpisodeResp
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
	(*actor.ActorResp)(nil),         // 14: gnboot.ActorResp
	(*api.Page)(nil),                // 15: gnboot.Page
	(*api.Sort)(nil),                // 16: gnboot.Sort
	(*api.IdsRequest)(nil),          // 17: gnboot.IdsRequest
	(*emptypb.Empty)(nil),           // 18: google.protobuf.Empty
}
var file_proto_series_proto_depIdxs = []int32{
	8,  // 0: gnboot.SeriesResp.genres:type_name -> gnboot.GenreResp
	9,  // 1: gnboot.SeriesResp.studios:type_name -> gnboot.StudioResp
	10, // 2: gnboot.SeriesResp.keywords:type_name -> gnboot.KeywordResp
	11, // 3: gnboot.SeriesResp.seasons:type_name -> gnboot.SeasonResp
	12, // 4: gnboot.SeriesResp.nextToPlay:type_name -> gnboot.EpisodeResp
	13, // 5: gnboot.SeriesResp.lastPlayedTime:type_name -> google.protobuf.Timestamp
	14, // 6: gnboot.SeriesResp.actors:type_name -> gnboot.ActorResp
	13, // 7: gnboot.SeriesResp.airDate:type_name -> google.protobuf.Timestamp
	15, // 8: gnboot.FindSeriesRequest.page:type_name -> gnboot.Page
	16, // 9: gnboot.FindSeriesRequest.sort:type_name -> gnboot.Sort
	15, // 10: gnboot.SearchSeriesResp.page:type_name -> gnboot.Page
	0,  // 11: gnboot.SearchSeriesResp.list:type_name -> gnboot.SeriesResp
	15, // 12: gnboot.FilterSeriesRequest.page:type_name -> gnboot.Page
	15, // 13: gnboot.NextToPlaySeriesRequest.page:type_name -> gnboot.Page
	5,  // 14: gnboot.SeriesRemoteService.GetSeries:input_type -> gnboot.GetSeriesRequest
	2,  // 15: gnboot.SeriesRemoteService.FindSeries:input_type -> gnboot.FindSeriesRequest
	4,  // 16: gnboot.SeriesRemoteService.FilterSeries:input_type -> gnboot.FilterSeriesRequest
	6,  // 17: gnboot.SeriesRemoteService.NextToPlaySeries:input_type -> gnboot.NextToPlaySeriesRequest
	7,  // 18: gnboot.SeriesRemoteService.UpdateSeries:input_type -> gnboot.UpdateSeriesRequest
	17, // 19: gnboot.SeriesRemoteService.DeleteSeries:input_type -> gnboot.IdsRequest
	0,  // 20: gnboot.SeriesRemoteService.GetSeries:output_type -> gnboot.SeriesResp
	3,  // 21: gnboot.SeriesRemoteService.FindSeries:output_type -> gnboot.SearchSeriesResp
	3,  // 22: gnboot.SeriesRemoteService.FilterSeries:output_type -> gnboot.SearchSeriesResp
	3,  // 23: gnboot.SeriesRemoteService.NextToPlaySeries:output_type -> gnboot.SearchSeriesResp
	18, // 24: gnboot.SeriesRemoteService.UpdateSeries:output_type -> google.protobuf.Empty
	18, // 25: gnboot.SeriesRemoteService.DeleteSeries:output_type -> google.protobuf.Empty
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_series_proto_init() }
func file_proto_series_proto_init() {
	if File_proto_series_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_series_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSeriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextToPlaySeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_series_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_series_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_series_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_series_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_series_proto_goTypes,
		DependencyIndexes: file_proto_series_proto_depIdxs,
		MessageInfos:      file_proto_series_proto_msgTypes,
	}.Build()
	File_proto_series_proto = out.File
	file_proto_series_proto_rawDesc = nil
	file_proto_series_proto_goTypes = nil
	file_proto_series_proto_depIdxs = nil
}
