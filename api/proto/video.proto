syntax = "proto3";

package gnboot;

import "openapiv3/annotations.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "proto/episode.proto";
import "proto/actor.proto";
import "proto/base.proto";


option go_package = "github.com/liluoliluoli/gnboot/api/video";

option (openapi.v3.document) = {
  info : {title : "video";
version : "1.0.0";
}
components : {
security_schemes: {
additional_properties:
  [{
    name:
      "BearerAuth";
    value: {
    security_scheme: {
    type:
      "http";
    scheme:
      "bearer";
    }
    }
  }]
}
}
  security: [
    {
      additional_properties: [
        {
          name: "BearerAuth";
          value: {
            value: []
          }
  }
      ]
      }
  ]
  }
  ;

  service VideoRemoteService {
    rpc CreateVideo(CreateVideoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post : "/api/video/create"
        body : "*"
      };
    }
    rpc GetVideo(GetVideoRequest) returns (Video) {
      option (google.api.http) = {
        post : "/api/video/get"
        body : "*"
      };
    }
    rpc SearchVideo(SearchVideoRequest) returns (SearchVideoResp) {
      option (google.api.http) = {
        post : "/api/video/search"
        body : "*"
      };
    }
    rpc UpdateVideo(UpdateVideoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put : "/api/video/update"
        body : "*",
        additional_bindings {
          patch : "/api/video/update",
          body : "*",
        }
      };
    }
    rpc DeleteVideo(IdsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post : "/api/video/delete"
      };
    }
    rpc PageFavorites(PageFavoritesRequest) returns (gnboot.SearchVideoResp) {
      option (google.api.http) = {
        post : "/api/user/queryFavorites"
        body : "*"
      };
    }
  }

  message Video {
    int32 id = 1;
    string title = 2;
    string videoType = 3;
    float voteRate = 4;
    int32 voteCount = 5;
    string region = 6;
    int32 totalEpisode = 7;
    string description = 8;
    string ext = 9;
    string publishMonth = 10;
    string thumbnail = 11;
    repeated string genres = 12;
    repeated gnboot.Actor actors = 13;
    repeated gnboot.Actor directors = 14;
    repeated gnboot.Episode episodes = 15;
    optional int32 lastPlayedTime = 16;
    optional int32 lastPlayedEpisodeId = 17;
    optional int32 lastPlayedPosition = 18;
    string ratio = 19;
    bool isFavorite = 20;
  }

  message CreateVideoRequest {
    string name = 1 [ (google.api.field_behavior) = REQUIRED ];
  }

  message SearchVideoRequest {
    Page page = 1;
    optional string search = 2;
    optional string sort = 3;
    optional string genre = 4;
    optional string region = 5;
    optional string year = 6;
    optional string videoType = 7;
    bool isHistory = 8;
  }

  message SearchVideoResp {
    Page page = 1;
    repeated Video list = 2;
  }

  message GetVideoRequest {
    int32 id = 1;
  }

  message UpdateVideoRequest {
    int32 id = 1 [ (google.api.field_behavior) = REQUIRED ];
    optional string name = 2;
  }

  message PageFavoritesRequest {
    Page page = 1;
  }
